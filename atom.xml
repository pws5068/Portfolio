<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Paul Silvis]]></title>
  <link href="http://paulsilvis.com/atom.xml" rel="self"/>
  <link href="http://paulsilvis.com/"/>
  <updated>2014-06-12T16:53:00-07:00</updated>
  <id>http://paulsilvis.com/</id>
  <author>
    <name><![CDATA[Paul Silvis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Traveling Solo]]></title>
    <link href="http://paulsilvis.com/blog/2014/04/05/traveling-solo"/>
    <updated>2014-04-05T11:30:00-07:00</updated>
    <id>http://paulsilvis.com/blog/2014/04/05/traveling-solo</id>
    <content type="html"><![CDATA[<p>For the past couple years I&#8217;ve been curious about the notion of solo-travel. The goal has always been to learn more about the world, and more importantly &#8211; about myself.</p>

<p>The destination was an easy choice, Thailand piqued my interest on many levels.<!-- more --> The cultural aspect would be totally foreign to me. The weather in Thailand is tropical with beautiful emerald water, and giant limestone karst (rock formations) protruding from the ocean. This of course brings me to the theme of my trip, Thailand is an international climbing destination. It&#8217;s every climber&#8217;s vision of paradise.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/thailand/deep_water_solo.jpg" width="600" title="Deep Water Soloing in Ton Sai" ></p>

<p>Stepping onto the plane I felt vastly unprepared for the next month of backpacker life. I had only booked one night of accomodations booked in the northern city of Chiang Mai. The climbing rope consumed half of my backpack space and I carried a total of 3 shirts, one pair of shorts, 3 pairs of socks and two spare pairs of boxers. The notebook in my pocket had a page titled &#8220;Thailand itinerary&#8221; .. with no other notes.</p>

<h2>Chiang Mai</h2>

<p>I arrived in Chiang Mai around 8pm and withdrew 10,000 baht (around $300) and hopped in the nearest taxi. Despite the jet lag, I was anxious to walk around and get a feel for the area. Chiang Mai is a fascinating city. A moat and sections of defensive walls still surround the city from historical threat from Burma and the Mongol Empire decades ago. I spent the first day exploring the city and visiting dozens of ancient Buddhist Temples.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/thailand/chiang_mai_temple.jpg" width="600" title="Chiang Mai Watt" ></p>

<p>The next morning, I showed up at Chiang Mai Rock Climbing Adventures and by some stroke of luck, ran into someone posting an ad for a climbing partner. The next day we took a song tao (basically an enclosed pickup truck) to Crazy Horse climbing area. The climbing was well bolted, well featured and a good intro to sport-climbing on limestone.</p>

<p>Everyone I met in Chiang Mai, travelers and locals alike, were friendly and laid back. Thai culture is very warm-hearted and welcoming. If you climb in Chiang Mai, you must spend a day on Heart Wall. Trust me on this one.</p>

<p>After 5 days, it was time to head south. Leaving a place like Chiang Mai is never easy, but the excitement for new experiences builds. I booked an overnight bus ride to Bangkok.</p>

<h2>Ton Sai</h2>

<p>After a short visit in Bangkok I was very ready to leave. The constant solicitation for buying stuff and tuk tuks on Khaosan road was far too much for me. It felt as though the Thai culture in the area was replaced by western greed. My time here was short, so your mileage may vary.</p>

<p>Another long bus ride delivered me south to Krabi, Ao Nang, and then finally to the rock climbing mecca. Ton Sai maintains its backpacker feel compared to the other touristy beaches on the Phra Nang Peninsula. I felt right at home in my tent over the next three weeks.</p>

<p>Upon arrival, I met up with a friend from Chiang Mai. He introduced me to <a href="http://madaleine.wordpress.com/">Madelin Sorkin</a>, a professional big-wall climber and her girlfriend. They were awesome enough let me third-wheel for a few days after he left and introduce me to a fascinating new friend named <a href="http://vanation.blogspot.com/">Elodie</a>.</p>

<p>Elodie introduced me to her crew who I spent the remainder of the trip with. In short; we climbed all the things.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/thailand/the_crew.jpg" width="600" title="Our crew" ></p>

<h2>Lessons Learned</h2>

<p>The serenity of Thailand and freedom of my own schedule enabled me to reflect on life more clearly. I spent a lot of time weighing the importance of career-building versus siezing the freedom to live &amp; explore the world. I&#8217;m intrigued by several friends on both extremes of the spectrum. The not-so-profound take away here is to keep your mind active and do what makes you happy.</p>

<p>I also recognized the importance of living in the moment. It&#8217;s all too easy to reminiss of home when you&#8217;re abroad, and dream about travel when you&#8217;re home. Life is too short to be detached.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Submodules vs. Subtrees]]></title>
    <link href="http://paulsilvis.com/blog/2014/03/12/submodules-vs-subtrees"/>
    <updated>2014-03-12T19:54:00-07:00</updated>
    <id>http://paulsilvis.com/blog/2014/03/12/submodules-vs-subtrees</id>
    <content type="html"><![CDATA[<p>Let&#8217;s suppose you have two similar projects which share lot of common code. For example, two iPhone apps with the same checkout process.
Git offers two powerful options to assist you in preventing duplicate code.<!-- more --></p>

<p>In both cases, you begin by creating a repository for each app and one containing only the shared code. Before implementing either, let&#8217;s
consider both workflows.</p>

<p><strong>Submodule Workflow</strong>
Subtrees are relatively straight forward. At a high-level, they are a nested git repository.
They maintain a separate commit history and separate remotes for ParentProject and CheckoutModule.</p>

<p>When you finish a feature that affects both repositories, your workflow may look like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd ~/ParentProject/CheckoutModule
</span><span class='line'>$ git commit -am "Added a great new feature!"
</span><span class='line'>$ git pull origin master
</span><span class='line'>$ git push origin master 
</span><span class='line'>
</span><span class='line'>$ cd ~/ParentProject
</span><span class='line'>$ git status
</span><span class='line'>  # On branch master
</span><span class='line'>  # modified:   CheckoutModule (new commits) 
</span><span class='line'>  # modified:   index.html
</span><span class='line'>
</span><span class='line'>$ git add .
</span><span class='line'>$ git commit -am "Horray for a new feature in ParentProject!"
</span><span class='line'>$ git push origin masters</span></code></pre></td></tr></table></div></figure>


<p>Notice that we made two separate commits for one feature. Both projects will maintain a history, which is appealing in some situations and
painful in others.</p>

<p>When you push the commits upstream, they will go to their own respective repositories. ParentProject simply maintains a reference to hash of the
CheckoutModule commit that it&#8217;s currently using.</p>

<p><strong>Subtree Workflow</strong></p>

<p>With subtrees, your repositories are organized in the same fashion. ParentProject and CheckoutModule live in their own github repositories.</p>

<p>The difference is that ParentProject believes it is a monolithic repository owning all of the code it needs. Here&#8217;s the workflow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd ~/ParentProject/
</span><span class='line'>$ git status
</span><span class='line'>  # On branch master
</span><span class='line'>  # modified CheckoutModule/test.html
</span><span class='line'>  # modified index.html
</span><span class='line'>$ git add . 
</span><span class='line'>$ git commit -am "Added the new feature using subtrees"
</span><span class='line'>$ git push origin master</span></code></pre></td></tr></table></div></figure>


<p>Great, that&#8217;s a pretty standard workflow. Now here&#8217;s</p>

<pre><code>[submodule "CheckoutModule"]
        path = submodules/checkout_module
        url = git@github.com:your_username/CheckoutModule.git
</code></pre>

<p>&#8220;`</p>

<p>Now, ParentProject&#8217;s git knows to maintain a hash pointing at it&#8217;s version of CheckoutModule.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Bisect]]></title>
    <link href="http://paulsilvis.com/blog/2013/08/16/git-bisect-saves-the-day"/>
    <updated>2013-08-16T23:32:00-07:00</updated>
    <id>http://paulsilvis.com/blog/2013/08/16/git-bisect-saves-the-day</id>
    <content type="html"><![CDATA[<p><a href="https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html">Git Bisect</a> the tool you never knew you needed but shouldn&#8217;t live without.</p>

<p>In short, bisect allows you to find the commit that introduced a bug or unexpected side-effect without reading through hundreds of lines of diffs. <!-- more -->Git bisect automates this process by jumping between a range of commits and allowing you to run your project to see if the bug is still there. Lets see one scenario where this comes in handy.</p>

<p>Earlier today I was hunting down a display issue in the <a href="https://itunes.apple.com/us/app/ink-cards-personalized-greeting/id477296657">Sincerely Ink</a> iphone app. The problem was small but multi-faceted so a few files were changed in the process. After fixing the problem, I switched gears &amp; worked on refactoring some duplicate code into shared submodules.</p>

<p>A few hours later I noticed a strange new UI issue in the iPad version of the app.  None of my commits <em>should</em> have affected the iPad version &#8230; and I couldn&#8217;t see any obvious culprit.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">log</span>
</span><span class='line'>
</span><span class='line'><span class="n">commit</span> <span class="mf">239f</span><span class="mi">095788</span><span class="n">d37f40d9e6438d18ff337f4db2649</span>
</span><span class='line'><span class="nl">Author:</span> <span class="n">Paul</span> <span class="n">Silvis</span> <span class="o">&lt;</span><span class="n">paulsilvis</span><span class="err">@</span><span class="n">gmail</span><span class="p">.</span><span class="n">com</span><span class="o">&gt;</span>
</span><span class='line'><span class="nl">Date:</span>   <span class="n">Fri</span> <span class="n">Aug</span> <span class="mi">16</span> <span class="mi">12</span><span class="o">:</span><span class="mi">57</span><span class="o">:</span><span class="mi">39</span> <span class="mi">2013</span> <span class="o">-</span><span class="mo">0700</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fixing</span> <span class="n">NUX</span> <span class="p">(</span><span class="n">nib</span> <span class="n">name</span> <span class="n">recently</span> <span class="n">changed</span> <span class="n">in</span> <span class="n">c7aa42</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">commit</span> <span class="mi">5268</span><span class="n">b90c048b6690dfe940f96463dbeb0842decc</span>
</span><span class='line'><span class="nl">Author:</span> <span class="n">Paul</span> <span class="n">Silvis</span> <span class="o">&lt;</span><span class="n">paulsilvis</span><span class="err">@</span><span class="n">gmail</span><span class="p">.</span><span class="n">com</span><span class="o">&gt;</span>
</span><span class='line'><span class="nl">Date:</span>   <span class="n">Fri</span> <span class="n">Oct</span> <span class="mi">16</span> <span class="mi">11</span><span class="o">:</span><span class="mi">36</span><span class="o">:</span><span class="mi">15</span> <span class="mi">2013</span> <span class="o">-</span><span class="mo">0700</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Deep</span> <span class="n">links</span><span class="o">:</span> <span class="n">side</span> <span class="n">panel</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">cached</span> <span class="n">view</span> <span class="n">controller</span> <span class="k">if</span> <span class="n">exists</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span> <span class="mi">5</span> <span class="n">more</span> <span class="n">arbitrary</span> <span class="n">commits</span>
</span><span class='line'>
</span><span class='line'><span class="n">commit</span> <span class="mi">92</span><span class="n">decce5d7a824da3eb8a1131654a70d59c832a6</span>
</span><span class='line'><span class="nl">Author:</span> <span class="n">Paul</span> <span class="n">Silvis</span> <span class="o">&lt;</span><span class="n">paulsilvis</span><span class="err">@</span><span class="n">gmail</span><span class="p">.</span><span class="n">com</span><span class="o">&gt;</span>
</span><span class='line'><span class="nl">Date:</span>   <span class="n">Thu</span> <span class="n">Aug</span> <span class="mi">15</span> <span class="mi">19</span><span class="o">:</span><span class="mi">11</span><span class="o">:</span><span class="mi">52</span> <span class="mi">2013</span> <span class="o">-</span><span class="mo">0700</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">rewriting</span> <span class="n">deep</span> <span class="n">link</span> <span class="n">handling</span> <span class="n">to</span> <span class="n">support</span> <span class="n">the</span> <span class="n">side</span> <span class="n">panel</span> <span class="o">&amp;</span> <span class="n">various</span> <span class="n">fixes</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, none of the recent commits are very suspect. Lets take a step back, I <em>know</em> the iPad UI displayed properly this morning.</p>

<p>Enter git bisect:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">bisect</span> <span class="n">start</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">bisect</span> <span class="n">bad</span> <span class="mi">4</span><span class="n">db2649</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">bisect</span> <span class="n">good</span> <span class="n">c832a6</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here, we showed git bisect that we&#8217;re experiencing a problem which was introduced sometime between the <em>good</em> commit from yesterday and a <em>bad</em> one from today where the problem exists.</p>

<p>Now the magic happens. Git bisect divides and conquers; selecting a commit near the middle and temporarily reverting.  If the issue still exists simply type &#8220;git bisect bad&#8221; (vs. good) to test another potential culprit. Git bisect will notify you when it&#8217;s found the offender and typing &#8220;git bisect reset&#8221; will return to your starting point.</p>

<p>Viola! Git bisect has handled the heavy lifting and tracked down the problem in the optimal number of steps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cathedral Peak]]></title>
    <link href="http://paulsilvis.com/blog/2013/06/18/cathedral-peak"/>
    <updated>2013-06-18T08:36:00-07:00</updated>
    <id>http://paulsilvis.com/blog/2013/06/18/cathedral-peak</id>
    <content type="html"><![CDATA[<p>&#8220;Ready to scratch those cams?&#8221; Eric asked out of the blue. I wasn&#8217;t sure exactly what he had in mind.. but after a few dozen expeditions with the guy I&#8217;ve learned to simply answer, &#8220;Yes.&#8221;<!-- more --></p>

<p>Apparently, Eric had his sights set on the classic Cathedral Peak of Yosemite.</p>

<p>To this point, I had followed him on a multi-pitch once. I had led two local outdoors sport routes .. each in the ballpark of 25-30 feet high. But Cathedral Peak? That&#8217;s over 800 feet. Sure, from the grade perspective a 5.7 crux sounded perfectly reasonable.. but damn.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/cathedral_west.jpg" width="300" title="Cathedral Peak from the West" ></p>

<p>A few days later we embarked with two other friends (Andrew and Daniel) to Yosemite. Eric and I had met Andrew on our bouldering trip to Bishop a few months back; Daniel and I had met briefly on a Castle Rock day trip.</p>

<p>Originally the three of us planned to stealth camp in Tuolumne meadows, but when we arrived late Friday night we decided to drop our gear in any open campsite. The temperature fell to the 30&#8217;s but we ditched our tents to save time in the morning.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/campsite.jpg" width="450" title="Campsite" ></p>

<p>After 6 hours of sleep, we piled into the car. Once at the trailhead we emptied our packs and racked our gear &#8211; then began our hike to the crag. The path ascended on a gradual incline with Cathedral Peak towering over the trees in the distance.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/sorting_gear.jpg" width="450" title="Racking Climbing Gear" ></p>

<p>We arrived at the base around 10am.. and we were surrounded by other climbing teams (and marmots).</p>

<p>Regardless, we found a clear section and prepared for our first pitch. Eric would lead trad and Daniel would follow. Daniel left Eric&#8217;s protection in the wall as he ascended. As the third climber I would then lead using his placements. After each pitch I would belay for Andrew while Eric started the next pitch.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/eric_base.jpg" width="450" title="Getting ready to climb" ></p>

<p>The first pitch was very short with a gradual incline. Eric climbed then built us an anchor, and we regrouped on the first belay station. We were still finding our groove at this point and fumbled with gear for a while before starting up the second pitch.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/daniel_first_pitch.jpg" width="450" title="First pitch" ></p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/paul_first_pitch.jpg" width="450" title="First pitch" ></p>

<p>The second pitch was equally short but more vertical. From there we found our rhythm and started catching up to the parties above. Unfortuantely, we would be doing a lot of waiting from then on.</p>

<p>We reached a stand-still on the third pitch for an hour or more. The wind picked up and the temperature dropped.</p>

<p>The fourth pitch was equally long and Andrew was stuck waiting alone on a small ledge below. Fortunately for all of us, the spectacular views made the wait managable despite the cold.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/andrew_pitch_3.jpg" width="450" title="Third Pitch" ></p>

<p>The climbing was graceful but at times the holds were small and knobby. There were definitely a few points where I was looking 15&#8217; down to my last clip and envisioning a rough whipper if I were to slip.</p>

<p>By the time we reached the famous chimney, we were all freezing and wondering if a summit was still in reach. All of the parties below us bailed, and this  was our last chance to escape if we wanted to throw in the towel. After a group discussion we decided to push forward. We had been on the wall for 9 hours now and fleeting daylight became a concern.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/chimney.jpg" width="450" title="Chimney" ></p>

<p>At the top of the chimney the altitude (11k&#8217;) combined with lack of food &amp; water finally caught up with me. I became nauseous and started to question my ability to keep pushing forward. Fortunately (now), I didn&#8217;t have a choice. The bottleneck above us cleared out and we climbed the last two pitches.</p>

<p>The views from the summit were unreal. I didn&#8217;t take many pictures and they wouldn&#8217;t do it justice. Eric always gets emotional around extrodinary scenery; this time I shared his sentiment. My symptoms faded as I absorbed our surroundings.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/climbing/cathedral_peak/eric_summit.jpg" width="450" title="Summit" ></p>

<p>I looked down at my cams in approval. Beautifully scratched.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack-o-Lantern]]></title>
    <link href="http://paulsilvis.com/blog/2012/11/14/hack-o-lantern"/>
    <updated>2012-11-14T14:29:00-08:00</updated>
    <id>http://paulsilvis.com/blog/2012/11/14/hack-o-lantern</id>
    <content type="html"><![CDATA[<p>I wanted to try something a little different for Halloween this year,
and I&#8217;ve been looking to get my hands dirty with more arduino hacking projects.<!-- more --></p>

<p>Of course, I&#8217;m not the first person to consider hacking a pumpkin so I took to
the internet for some inspiration.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/hacks/arduino_hacking/lcd_shield_testing.jpg" width="280"></p>

<p>The most intriguing project I came across was a <a href="http://www.instructables.com/id/Arduino-controlled-Silly-String-shooter/">pumpkin armed with silly string and a motion sensor</a>,
but given the limited time on hand and dwindling inventory at the local radio shack I
needed to come up with something different.</p>

<p>Radio Shack did have one item in particular that caught my interest, a <a href="http://www.radioshack.com/product/index.jsp?productId=2062405">102dB Piezo Alarm</a>.</p>

<p>That should suffice to scare the pants off any unsuspecting guests.  Using some google-fu I
managed to find a person who had made a DIY from a very similar project .. <a href="http://blog.makezine.com/2012/10/26/make-the-scariest-pumpkin-ever/">except that he used a car horn</a>.  I suspect my neighbors would
not approve.</p>

<p>So I started wiring up the components available.</p>

<p><img src="http://paulsilvis.com/images/posts/pages/hacks/arduino_hacking/arduino_breadboard.jpg" width="450"></p>

<p>But, the problem remained .. with no motion sensor how could I hide conspicuously trigger
the alarm? Easy. By selecting a button as large and irresistable as possible :)</p>

<p><img src="http://paulsilvis.com/images/posts/pages/hacks/arduino_hacking/finished_hack_o_lantern.jpg" width="450"></p>

<p>The photo above was taken from the entrance to the Sincerely Halloween Party&#8217;s haunted
maze.  I used a portable battery pack to power the Arduino &amp; let it loose.</p>

<p>LEDs in the button glowed with temptation &amp; any time someone entering fell for the trap
everyone at the event in the got a good laugh.  The sketch was pretty simple:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define R_LED 5 </span><span class="c1">//The pin # of the red LED</span>
</span><span class='line'><span class="cp">#define Y_LED 6 </span><span class="c1">// The pin # of the Yellow LED</span>
</span><span class='line'><span class="cp">#define SPEAKER 3 </span><span class="c1">//The pin # of the speaker</span>
</span><span class='line'><span class="cp">#define BUTTON 7 </span><span class="c1">//The pin # of the button</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//The on/off state of our siren.</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">R_LED</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">Y_LED</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">SPEAKER</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">BUTTON</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Save the buttons state</span>
</span><span class='line'>  <span class="n">state</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">BUTTON</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//If the siren is on...</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">state</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;STATE = 1&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Flash LED and Speaker on and off.</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">Y_LED</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">R_LED</span><span class="p">,</span> <span class="mi">255</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">SPEAKER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="n">delay</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">Y_LED</span><span class="p">,</span> <span class="mi">255</span><span class="p">);</span>
</span><span class='line'>      <span class="n">delay</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">R_LED</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">Y_LED</span><span class="p">,</span> <span class="mi">255</span><span class="p">);</span>
</span><span class='line'>      <span class="n">analogWrite</span><span class="p">(</span><span class="n">SPEAKER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="n">delay</span><span class="p">(</span><span class="mi">400</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//Turn of the speaker</span>
</span><span class='line'>    <span class="n">analogWrite</span><span class="p">(</span><span class="n">SPEAKER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//Turn of the LED</span>
</span><span class='line'>    <span class="n">analogWrite</span><span class="p">(</span><span class="n">R_LED</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">analogWrite</span><span class="p">(</span><span class="n">Y_LED</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Office Climbing Wall]]></title>
    <link href="http://paulsilvis.com/blog/2012/10/24/office-climbing-wall"/>
    <updated>2012-10-24T22:16:00-07:00</updated>
    <id>http://paulsilvis.com/blog/2012/10/24/office-climbing-wall</id>
    <content type="html"><![CDATA[<p>One late evening at the office, myself and a few coworkers realized our office was definitely missing
something. We had a kitchen, an office dog and fantastic views. When we put our minds to it the answer was so clear &#8211; a rock climbing wall!<!-- more --></p>

<p>So, on a whim I found a tape measure and sketched up some plans for the new addition.  We decided
to turn the post shown below into our wall.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/original_pillar.jpg" width="250" title="Halfway Done" ></p>

<p>Now as it turned out, the concrete posts are actually in place to wrap the support beam inside. The concrete itself is very weak and is crumbling.  It wouldn&#8217;t suffice to drill any concrete screws and expect them to support the load.  Instead, we decided to construct a frame around the pillar.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/construction_plan.png" width="450" title="Rough Construction Plan" ></p>

<p>The wall is designed to be supported only by frame itself, and is not anchored to the beam in any way.  The main concern here was that the frame could move when weighted.</p>

<p>I recruited some friends to help along with a coworker, the famous Doc Pop.  While he and I drilled &amp; assembled the frame, the our friends prepared the panels.  They started by mixing some fine grained sand with the black paint we had chosen and adding several coats.  The texture worked out amazingly strong, clean and featured.</p>

<p><img class="left" src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/freshly_painted.jpg" width="350">
<img src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/doc_drilling.jpg" width="300" height="300">
<img src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/inc_climbing_wall_halfway.jpg" width="300" title="Halfway Done" ></p>

<p>Then they marked up the back of the panels with locations for our predrilled hold placement options.</p>

<p>Doc drilled away at the back of the painted walls and then the finale.  We screwed all of the panels into the frame and wallah!  We had a climbing wall&#8230;. sans holds.</p>

<p>Placing the holds was of course the most exciting part&#8230; and the moment of truth &#8230; standing on wall for the first time.  The climbing holds bolted in nicely and didn&#8217;t budge when weighted.  Success.</p>

<p>The plans weren&#8217;t perfect however, I made a calculation typo in the measurements of the plywood walls leaving a slight gap on one side of the pillar.  After a few paint touch ups the mistake is hardly noticeable and even provides another crack-like feature to use for certain climbing routes.</p>

<p><img src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/completed_project.png" width="400">
<img class="left" src="http://paulsilvis.com/images/posts/pages/hacks/office_climbing_wall/paul_by_wall.jpg" width="400"></p>
]]></content>
  </entry>
  
</feed>
